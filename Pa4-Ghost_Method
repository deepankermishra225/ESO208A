%% DEEPANKER MISHRA ROCKZZ!!!!
%% PROGRAM 2
h = input('Enter the value of step size:        ') ;
%% using ghost method!!!!
syms alpha(t) ;
alpha(t) =    (t+3)/(t+1)   ;
syms beta(t) ;
beta(t)  =    (t+3)/((t+1)*(t+1))  ;
syms gama(t) ;
gama(t)  =    -(t+3)/(t+1)   ; 
syms s(t) ;
s(t)     =   2*(t+1) +3*(t+3)/((t+1)*(t+1));
n     = 2/h ;
x     = zeros(n+2,1) ;
y     = zeros(n+2,1) ;
y(1)  = 5 ;
x(1)  = 0 ;
x(n+1)= 2 ;

for i=1:n+1
   x(i+1) = x(i)+h ; 
end

a = zeros(n,n) ;
b = zeros(n,1) ;

for i=2:n-1
    a(i,i-1) =   alpha(x(i+1))/(2*h)  +    (1/(h*h)) ; 
    a(i,i)   =    beta(x(i+1))        -    (2/(h*h)) ;
    a(i,i+1) =    gama(x(i+1))/(2*h)  +    (1/(h*h)) ;
    b(i)     =    s(x(i+1))    ;
end
a(1,1)       = beta(x(2))          -      2/((h*h)) ;
a(1,2)       = gama(x(2))/(2*h)    +     (1/(h*h)) ;
b(1)         = s(x(2))             +      y(1) * (alpha(x(2))/(2*h)     +     (1/h*h))   ;
a(n,n-1)   = alpha(x(n+1))/(2*h)+ (1/(h*h)) + (gama(x(n+1))/(2*h)  +  (1/(h*h)))  ;
a(n,n)   = (beta(x(n+1))-2/((h*h))) ;      %+ 4*(gama(x(n))/(2*h)   +  (1/(h*h)) )/3 ;
b(n)       = s(x(n))    ;    % since value of derivative at x=2 is 0

%% using the thomas algorithm
alpha1 = zeros(n,1) ;
beta1  = zeros(n,1) ;
sols   = zeros(n,1) ;
l      = zeros(n,1) ;
u      = zeros(n,1) ;
l(1)   = 0       ;
u(1)   = a(1,2)  ;
u(n) = 0       ;
for i=2:n
   l(i) = a(i,i-1) ;
  if i ~= n
   u(i) = a(i,i+1) ;
  end
end
alpha1(1) = a(1,1) ;
beta1(1)  =  -b(1)  ;
 for i=2:n
     alpha1(i) = a(i,i)- (l(i)/alpha1(i-1))*u(i) ;
     beta1(i)  = b(i) - (l(i)/alpha1(i-1))*beta1(i-1) ;
 end
 sols(n) = beta1(n)/alpha1(n) ;
 for i=1:n-1
    sols(n-i) = (beta1(n-i) - sols(n-i+1)*u(n-i) )/alpha1(n-i)  ; 
 end
 %% assigning values to y(i)!!
 for i=1:n
    y(i+1) = sols(i) ;
 end
y(n+2) = y(n+1) ;
 
%% printing the data points
fid = fopen('Ghost_Method__.txt','w');
fprintf(fid , 'The values at the data points are:\n') ;
for i= 1:n+2
   fprintf(fid ,'%f     %f\n',x(i) , y(i)) ;  
end
fclose(fid) ;
scatter(x,y) ;
hold on ;
plot(x,y)   ;
